###<Name TBD> theme by @TomIO#2000
# Color palette
# #0A75AD - User/Hostname bg
# #D61E1C - Error/Attention
# #FF33B8 - /tmp directory and Termux Prefix
# #9010F0 - Not Executable/Continuation Prompt
# #E26D0E - Abort/Interrupt
# #EDBC00 - Informational
# #1DA65A - Success/Time
# #F5FBFF - Text color general
# #B0B2B4 - Text light
# #4F4D4B - bg dark
# #0A0400 - Text inverse

# Comment styling
# ** Highlight
# ?? Informational
# !! Important
# ~~ Invalidated
# (TODO) Todo comments
# (WIP) Work in Progress
# (ACK) acknowledgment

"$schema" = 'https://starship.rs/config-schema.json'

# Order of modules on prompt
format = """\
        ${custom.git_newline}\
        $time\
        $sudo\
        $jobs\
        $shlvl\
        $username\
        $hostname\
        ${env_var.termux}\
        $directory\
        $git_branch\
        $git_metrics\
        $git_commit\
        $git_status\
        $git_state\
        $cmd_duration\
        $status\
    """

#?? A continuation prompt is trigged if you enter an incomplete statement on the command line.
#?? Only supported in Bash, Zsh and PowerShell.
continuation_prompt = """\
[>>>](fg:#9010F0)
"""

add_newline = false # disable multiline prompt

# [battery] # Battery Charge state (This breaks the Termux version of starship)
# charging_symbol = ""
# discharging_symbol = ""
# format = "[$symbol$percentage]($style)"
# 
# [[battery.display]]
# threshold = 10 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#D61E1C bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 20 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#D61E1C bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 30 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#E26D0E bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 40 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#E26D0E bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 50 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#EDBC00 bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 60 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#EDBC00 bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 70 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#EDBC00 bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 80 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#1DA65A bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 90 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#1DA65A bg:#4F4D4B"
# 
# [[battery.display]]
# threshold = 99 # %
# charging_symbol = ""
# discharging_symbol = ""
# style = "fg:#1DA65A bg:#4F4D4B"

[cmd_duration] # track runtime of a command
disabled = false
style = "fg:#EDBC00 bg:#4F4D4B"
min_time = 1_000
show_milliseconds = true
show_notifications = false
min_time_to_notify = 45_000
format = "[ $duration]($style)"

[custom.git_newline] # Add a newline if we are in a git repo.
disabled = false
use_stdin = false
detect_folders = [".git"]
when = "[ $(git rev-parse --show-toplevel 2> /dev/null) ]"
description = "Adds a newline if a .git folder is found in the current working directory"
style = "fg:#E26D0E bg:#1DA65A"
symbol = "\n "
format = "[$symbol]($style)"


[directory] # current directory
style = "fg:#D61E1C bg:#4F4D4B"
read_only_style = "fg:#D61E1C bg:#4F4D4B"
repo_root_style = "fg:#E26D0E bg:#4F4D4B"
truncation_length = 255 # maximum path depth before truncation
read_only = ""
truncation_symbol = " "
use_os_path_sep = true # '/' for Linux/MacOS or other UNIX based systems; '\' for Windows
use_logical_path = false
truncate_to_repo = true # change this if you prefer showing the full path
format = "([$read_only]($read_only_style))[$path]($style)"
repo_root_format = "[$before_root_path](fg:#B0B2B4 bg:#4F4D4B)[$read_only]($read_only_style)[\n  $repo_root]($repo_root_style)[$path](fg:#B0B2B4 bg:#4F4D4B)"

[directory.substitutions] # Differential coloring for certain directories
# ANSI escape sequence rituals for 
# differential coloring of substituted directories.
# ------Generic  forms------+--Esc-sequences--+
# ESC[38;2;{r};{g};{b}m - fg|                 |
# ESC[48;2;{r};{g};{b}m - bg|                 |
# --HEX-- ->  R | G | B     |                 |
# ------------bg------------|                 |
# #4F4D4B ->  79; 77; 75 -> |48;2;79;77;75m   |
# ------------fg------------|                 |
# #B0B2B4 -> 176;178;180 -> |38;2;176;178;180m|
# #0A75AD ->  10;117;173 -> |38;2;10;117;173m |
# #D61E1C -> 214; 30; 28 -> |38;2;214;30;28m  |
# #E26D0E -> 226;109; 14 -> |38;2;226;109;14m |
# #EDBC00 -> 237;188;  0 -> |38;2;237;188;m   |
# #1DA65A ->  29;166; 90 -> |38;2;29;166;90m  |
# --------------------------+-----------------+
# example substitution:
# ** Full format: "/dir/example" = "<CSI><38;2;r;g;b>mSubstitution<CSI><38;2;r;g;b>m"
# !! Substitute string has to be a basic string ("<str>") for Escape sequences to work↲
#    "/dir/example", the directory to be substituted; "basic" or 'literal' string
#    <CSI> = <U+001B><U+005B> = ␛[ - The Control Sequence Introducer starts a ANSI escape sequence
#     ↳<U+009B> is a single character Control Sequence Introducer, however it is not universally supportted and does not work in Termux.
#    <38;2;r;g;b> - Escape sequence for setting the foreground color in 24bit truecolor mode
#    m - ends the graphics mode escape sequence
#    <Substitution> - the actual text to be used as substitution
# !! since this has to be a basic string any characters with special purposes like [ have to be escaped with a backslash \
# ?? for more info see: https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797#rgb-colors

### special cases - bg:#4F4D4B (inherited from [directory] module, <style> key)
"~" = "\u001B\u005B38;2;29;166;90m~\u001B\u005B38;2;176;178;180m"          #      <~> fg:#1DA65A
"/dev" = "\u001B\u005B38;2;226;109;14m/dev\u001B\u005B38;2;176;178;180m"   #   </dev> fg:#E26D0E
"/etc" = "\u001B\u005B38;2;10;117;173m/etc\u001B\u005B38;2;176;178;180m"   #   </etc> fg:#0A75AD
"/tmp" = "\u001B\u005B38;2;255;51;184m/tmp\u001B\u005B38;2;176;178;180m"   #   </tmp> fg:#FF33B8
"/var" = "\u001B\u005B38;2;237;188;5m/var\u001B\u005B38;2;176;178;180m"    #   </var> fg:#EDBC00
"/root" = "\u001B\u005B38;2;214;30;28m/root\u001B\u005B38;2;176;178;180m"  #  </root> fg:#D61E1C
"/mnt" = "\u001B\u005B38;2;10;117;173m/mnt\u001B\u005B38;2;176;178;180m"   #   </mnt> fg:#0A75AD
"/usr" = "\u001B\u005B38;2;226;109;14m/usr\u001B\u005B38;2;176;178;180m"   #   </usr> fg:#E26D0E
"/home" = "\u001B\u005B38;2;29;166;90m/home\u001B\u005B38;2;176;178;180m"  #  </home> fg:#1DA65A
"/data/data/com.termux/files" = "\u001B\u005B38;2;255;51;184mTermux\u001B\u005B38;2;176;178;180m" # fg:#FF33B8
### general case - fg:#B0B2B4 bg:#4F4D4B (inherited from [directory] module, <style> key)
"/bin" = "\u001B\u005B38;2;176;178;180m/bin"
"/boot" = "\u001B\u005B38;2;176;178;180m/boot"
"/init" = "\u001B\u005B38;2;176;178;180m/init"
"/lib" = "\u001B\u005B38;2;176;178;180m/lib"
"/lib64" = "\u001B\u005B38;2;176;178;180m/lib64"
"/lost+found" = "\u001B\u005B38;2;176;178;180m/lost+found"
"/media" = "\u001B\u005B38;2;176;178;180m/media"
"/opt" = "\u001B\u005B38;2;176;178;180m/opt"
"/proc" = "\u001B\u005B38;2;176;178;180m/proc"
"/run" = "\u001B\u005B38;2;176;178;180m/run"
"/sbin" = "\u001B\u005B38;2;176;178;180m/sbin"
"/srv" = "\u001B\u005B38;2;176;178;180m/srv"
"/sys" = "\u001B\u005B38;2;176;178;180m/sys"

[env_var.termux] # Detect if the prompt is running on Android/Termux, if so add an Android symbol infront of the directory.
disabled = false
variable = "ANDROID_ROOT"
symbol = " "
style = "fg:#1DA65A bg:#4F4D4B"
format = "[$symbol]($style)"

### Modules for git
[git_branch] # name of the current git branch
disabled = false
symbol = " "
style = "fg:#EDBC00 bg:#4F4D4B"
# truncation_length = 4
# truncation_symbol = ""
format = "[$symbol$branch]($style)"

[git_commit] # current commit hash on detached branch
disabled = false
tag_disabled = false
tag_symbol = "#"
style = "fg:#EDBC00 bg:#4F4D4B"
commit_hash_length = 7
only_detached = true # Don't show Hash when on regular main branch
format = "([$tag$hash]($style))"

[git_metrics] # show additions and deletions since last push
disabled = false
only_nonzero_diffs = true # set false for testing purposes
added_style = "fg:#1DA65A bg:#4F4D4B"
deleted_style = "fg:#D61E1C bg:#4F4D4B"
format = "([](fg:#EDBC00 bg:#4F4D4B)[$added]($added_style)[⥮](fg:#B0B2B4 bg:#4F4D4B)[$deleted]($deleted_style))"


[git_state] # progress of the current git operation
disabled = false
style = "fg:#EDBC00 bg:#4F4D4B"
rebase = "rebasing"
merge = "merging"
revert = "reverting"
cherry_pick = " picking"
bisect = "bisecting"
am = "am'ing"
am_or_rebase = "am/rebase"
format = "[$state(❮$progress_current/$progress_total❯)]($style)"

[git_status] # symbolic and plaintext versions for clairity (if preferred).
disabled = false
style = "fg:#EDBC00 bg:#4F4D4B"
stashed = "${count}" # Regular symbol for stashed files
# stashed = "stashed:${count}"
staged = "${count}" # Regular symbol for staged files
# staged = "staged:${count}"
modified = "凜${count}" # Regular symbol for modified files
# modified = "modified:${count}"
renamed = "﫦${count}" # Regular symbol for renamed files
# renamed = "renamed:${count}"
untracked = "${count}" # Regular symbol for untracked files
# untracked = "untracked:${count}"
deleted = "${count}" # Regular symbol for deletions
# deleted = "deletions:${count}"
conflicted = "${count}" # Regular symbol for conflicts
# conflicted = "conflicts:${count}"
ahead = "ﲗ ${count}" # Regular symbol for number of commits ahead of remote
# ahead = "ahead:${count}"
behind = "ﲔ ${count}" # Regular symbol for number of commits behind remote
# behind = "behind:${count}"
diverged = "李${ahead_count} ${behind_count}" # Regular symbol for branch diversion
# diverged = "divergent: ${ahead_count} ${behind_count}"
format = "([$stashed$staged$modified$renamed$untracked$deleted$conflicted$ahead_behind]($style))"

[hostname] # system hostname, with indicator if logged in via SSH session.
disabled = false
style = "fg:#F5FBFF bg:#0A75AD"
#trim_at = "."
ssh_only = false
ssh_symbol = " "
format = "[@$hostname$ssh_symbol]($style)[](fg:#B0B2B4 bg:#4F4D4B)"

[jobs] # background tasks
disabled = false
symbol = " "
style = "bold fg:#EDBC00 bg:#0A75AD"
number_threshold = 1
symbol_threshold = 1
format = "[$number$symbol]($style)"

# [shell] # (WIP) Shell indicator - Remember to add $shell\ to the Top Level Format!!!
# disabled = false
# cmd_indicator = ""
# powershell_indicator = ""
# bash_indicator = ""
# elvish_indicator = ""
# fish_indicator = ""
# ion_indicator = ""
# nu_indicator = ""
# tcsh_indicator = ""
# xonsh_indicator = ""
# zsh_indicator = "z"
# unknown_indicator = "?"
# style = "fg:#0A75AD"

[shlvl] # indicator for nested shells
disabled = false
symbol = ""
style = "bold fg:#EDBC00 bg:#0A75AD"
threshold = 2
format = "[$symbol$shlvl]($style)"

[status] # customized end segments for the prompt based on exit code
disabled = false
symbol = "[$status](underline fg:#D61E1C bg:#4F4D4B)[](bold fg:#B0B2B4 bg:#4F4D4B)[](fg:#4F4D4B bg:#D61E1C)[](fg:#D61E1C)"
success_symbol = "[](fg:#4F4D4B bg:#1DA65A)[](fg:#1DA65A)" # Don't show exit code <0> on success
not_executable_symbol = "[$status](underline fg:#E26D0E bg:#4F4D4B)[](bold fg:#B0B2B4 bg:#4F4D4B)[ ](fg:#E26D0E bg:#4F4D4B)[](bg:#E26D0E fg:#4F4D4B)[](fg:#E26D0E)"
not_found_symbol = "[$status](underline fg:#EDBC00 bg:#4F4D4B)[](bold fg:#B0B2B4 bg:#4F4D4B)[?](fg:#EDBC00 bg:#4F4D4B)[](bg:#EDBC00 fg:#4F4D4B)[](fg:#EDBC00)"
sigint_symbol = "[$status](underline fg:#E26D0E bg:#4F4D4B)[](bold fg:#B0B2B4 bg:#4F4D4B)[ ](fg:#E26D0E bg:#4F4D4B)[](bg:#E26D0E fg:#4F4D4B)[](fg:#E26D0E)"
signal_symbol = "[$status](underline fg:#0A75AD bg:#4F4D4B)[](bold fg:#B0B2B4 bg:#4F4D4B)[](fg:#0A75AD bg:#4F4D4B)[](bg:#0A75AD fg:#4F4D4B)[](fg:#0A75AD)"
style = "bold fg:#B0B2B4 bg:#4F4D4B"
map_symbol = true
recognize_signal_code = true
format = '[$symbol]($style)'
### Pipe Status handling - not currently implemented, it'd be very janky with this setup. Might add it if I get a good idea how to handle the formatting properly
#pipestatus = true
#pipestatus_separator = "|"
#pipestatus_format = "[易$pipestatus](fg:#EDBC00 bg:#4F4D4B)[$common_meaning$signal_name]($style)"

[sudo] # indicate stored sudo credentials
disabled = false
style = "fg:#D61E1C bg:#0A75AD"
symbol = " "
format = "[$symbol]($style)"

[time] # time; HH:MM:SS (local time)
disabled = false
style = "fg:#0A0400 bg:#1DA65A"
use_12hr = false
time_format = "%H:%M:%S"
utc_time_offset = "local"
format = "[❮]($style)[$time](underline $style)[❯]($style)"

[username] # the currently logged in user
disabled = false
show_always = true
style_root = "bold fg:#D61E1C bg:#0A75AD"
style_user = "fg:#F5FBFF bg:#0A75AD"
format = "[$user]($style)"
#EOF.
